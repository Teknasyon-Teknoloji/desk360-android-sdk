apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

apply plugin: 'org.jetbrains.dokka-android'

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 6
        versionName "0.6.23-huawei"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable true
        }

        debug {
            minifyEnabled false
            debuggable true

        }
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dokka {
        outputFormat = 'gfm'
        outputDirectory = "$buildDir/javadoc"
    }

    android {
        lintOptions {
            abortOnError false
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.1'


    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt 'androidx.lifecycle:lifecycle-compiler:2.2.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //navigation controller
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'

    //http connection libs
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "com.squareup.retrofit2:retrofit:2.7.0"
    implementation "com.squareup.retrofit2:converter-gson:2.7.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.2.0"
    implementation "com.squareup.retrofit2:converter-scalars:2.3.0"

    //recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version" 

    //
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.2.0-alpha05'
    implementation 'com.karumi:dexter:6.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'io.paperdb:paperdb:2.6'
}
repositories {
    mavenCentral()
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        pom(MavenPublication) {
            groupId "com.github.Teknasyon-Teknoloji"
            version "0.6.23-huawei"
            artifactId "desk360-android-sdk"
            artifact("$buildDir/outputs/aar/desk360-release.aar")
            artifact(sourceJar)
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each => https://stackoverflow.com/a/39252262/4300071
                configurations.implementation.allDependencies.each {
                    if (it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

artifactory {
    contextUrl = localProperties['artifactory_contextUrl']   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'AresFramework'
            username = localProperties['artifactory_user']
            password = localProperties['artifactory_password']
            maven = true

        }
        defaults {
            publications('pom')
            publishArtifacts = true

            properties = ['qa.level': 'basic', 'q.os': 'android', 'dev.team': 'core']
            publishPom = true
        }
    }

    resolve {
        repository {
            repoKey = 'gradle-release'
            username = localProperties['artifactory_user']
            password = localProperties['artifactory_password']
            maven = true

        }
    }
}